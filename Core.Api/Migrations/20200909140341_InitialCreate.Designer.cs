// <auto-generated />
using System;
using Core.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core.Api.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20200909140341_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Model.Department", b =>
                {
                    b.Property<int>("DepartmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DeparmentName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DepartmentId");

                    b.ToTable("Depatrments");

                    b.HasData(
                        new
                        {
                            DepartmentId = 1,
                            DeparmentName = "IT"
                        },
                        new
                        {
                            DepartmentId = 2,
                            DeparmentName = "CS"
                        },
                        new
                        {
                            DepartmentId = 3,
                            DeparmentName = "CIS"
                        });
                });

            modelBuilder.Entity("Core.Model.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("BirhtOfDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Gender")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhotoPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EmployeeId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeId = 1,
                            BirhtOfDate = new DateTime(1982, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "EMP1",
                            DepartmentId = 1,
                            Email = "empmohamed@yahoo.com",
                            FirstName = "mohamed",
                            Gender = 0,
                            LastName = "salem",
                            PhotoPath = "images/icon/avatar-01.jpg"
                        },
                        new
                        {
                            EmployeeId = 2,
                            BirhtOfDate = new DateTime(1982, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "EMP2",
                            DepartmentId = 1,
                            Email = "empAhmed@yahoo.com",
                            FirstName = "Ahmed",
                            Gender = 0,
                            LastName = "salem",
                            PhotoPath = "images/icon/avatar-03.jpg"
                        },
                        new
                        {
                            EmployeeId = 3,
                            BirhtOfDate = new DateTime(1982, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "EMP3",
                            DepartmentId = 2,
                            Email = "empHana@yahoo.com",
                            FirstName = "Hana",
                            Gender = 1,
                            LastName = "salem",
                            PhotoPath = "images/icon/avatar-02.jpg"
                        },
                        new
                        {
                            EmployeeId = 4,
                            BirhtOfDate = new DateTime(1982, 5, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Code = "EMP4",
                            DepartmentId = 3,
                            Email = "empLana@yahoo.com",
                            FirstName = "Lana",
                            Gender = 1,
                            LastName = "salem",
                            PhotoPath = "images/icon/avatar-02.jpg"
                        });
                });

            modelBuilder.Entity("Core.Model.Employee", b =>
                {
                    b.HasOne("Core.Model.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId");
                });
#pragma warning restore 612, 618
        }
    }
}
